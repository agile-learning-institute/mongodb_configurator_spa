openapi: 3.0.3
info:
  title: MongoDB Configurator API
  description: |
    API for managing MongoDB configurations
  version: 1.0.0
  contact:
    email: devs@agile-learning.institute
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8081
    description: Local development server

paths:
  /docs/index.html:
    get:
      summary: (this) API Explorer
      description: Interactive API documentation
      tags:
        - Documentation
      responses:
        '200':
          description: API Explorer HTML page
          content:
            text/html:
              schema:
                type: string
  /api/configurations/:
    get:
      summary: List all Collection Configurations
      tags:
        - Collection Configurations
      operationId: list_configurations
      responses:
        '200':
          description: List of collections configuration files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/files'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    post:
      summary: Process all Configured Collections 
      tags:
        - Collection Configurations
      operationId: process_collections
      responses:
        '200':
          description: All configured collections processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    patch:
      summary: Lock all Collection Configurations
      operationId: lock_all_configurations
      tags:
        - Collection Configurations
      responses:
        '200':
          description: All configurations locked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/configurations/{file_name}/:
    get:
      summary: Get a collection configuration
      operationId: get_configuration
      tags:
        - Collection Configurations
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection configuration object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configuration'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    put:
      summary: Save a collection configuration
      operationId: save_configuration
      tags:
        - Collection Configurations
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/configuration'
      responses:
        '200':
          description: Collection configuration file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configuration'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    post:
      summary: Process a collection configuration
      operationId: process_collection
      tags:
        - Collection Configurations
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection configured successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    delete:
      summary: Delete a collection configuration
      operationId: delete_configuration
      tags:
        - Collection Configurations
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Collection configuration deleted
          content:    
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/configurations/collection/{name}:
    post:
      summary: Create a new collection
      description: |
        Creates a new collection by generating configuration and dictionary files from templates found in the /templates directory.
        This endpoint creates both a configuration file and a dictionary file for the specified collection name.
      tags:
        - Collection Configurations
      parameters:
        - name: name
          in: path
          required: true
          description: The name of the collection to create
          schema:
            type: string
            pattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
            example: "my_collection"
      responses:
        '200':
          description: Collection created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/configuration'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/configurations/json_schema/{file_name}/{version}/:
    get:
      summary: Get a Json Schema 
      description: Json Schema for a specific schema version (e.g., 1.0.0.1")
      operationId: render_json_schema
      tags:
        - Collection Configurations
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            description: Configuration file name
            type: string
        - name: version
          in: path
          required: true
          schema:
            description: Version string (e.g., "1.0.0.1")
            type: string
      responses:
        '200':
          description: Schema
          content:
            text/json:
              schema:
                type: object
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/configurations/bson_schema/{file_name}/{version}/:
    get:
      summary: Get a Bson Schema 
      description: Bson Schema for a specific schema version (e.g., "sample.1.0.0.1")
      operationId: render_bson_schema
      tags:
        - Collection Configurations
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            description: Configuration file name
            type: string
        - name: version
          in: path
          required: true
          schema:
            description: Version string (e.g., "1.0.0.1")
            type: string
      responses:
        '200':
          description: Schema
          content:
            text/json:
              schema:
                type: object
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/dictionaries/:
    get:
      summary: List all Dictionaries
      operationId: list_dictionaries
      tags:
        - Data Dictionaries
      responses:
        '200':
          description: List of dictionaries configuration files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/files'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    patch:
      summary: Lock all Dictionaries
      operationId: lock_all_dictionaries
      tags:
        - Data Dictionaries
      responses:
        '200':
          description: All dictionaries locked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/dictionaries/{file_name}/:
    get:
      summary: Get a dictionary 
      operationId: get_dictionary
      tags:
        - Data Dictionaries
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Dictionary object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dictionary'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    put:
      summary: Save a dictionary
      operationId: save_dictionary
      tags:
        - Data Dictionaries
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dictionary'
      responses:
        '200':
          description: Dictionary file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dictionary'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    delete:
      summary: Delete a dictionary
      operationId: delete_dictionary
      tags:
        - Data Dictionaries
      parameters:
        - name: file_name
          in: path
          required: true
      responses:
        '200':
          description: Dictionary deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event' 
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/types/:
    get:
      summary: List all Types
      operationId: list_types
      tags:
        - Data Types
      responses:
        '200':
          description: List of type files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/files'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    patch:
      summary: Lock all Types
      operationId: lock_all_types
      tags:
        - Data Types
      responses:
        '200':
          description: All types locked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/types/{file_name}/:
    get:
      summary: Get a type 
      operationId: get_type
      tags:
        - Data Types
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Type object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/type'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    put:
      summary: Save a type
      operationId: save_type
      tags:
        - Data Types
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/type'
      responses:
        '200':
          description: Type file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/type'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    delete:
      summary: Delete a type
      operationId: delete_type
      tags:
        - Data Types
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Type deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/enumerators/:
    get:
      summary: List all Enumeration Files
      operationId: list_enumerators
      tags:
        - Enumerators
      responses:
        '200':
          description: List of enumerator files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/files'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    patch:
      summary: Lock all Enumerators
      operationId: lock_all_enumerators
      tags:
        - Enumerators
      responses:
        '200':
          description: All enumerators locked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/enumerators/{file_name}/:
    get:
      summary: Get an enumerator file
      operationId: get_enumerator
      tags:
        - Enumerators
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Enumerator file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/enumerations'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    put:
      summary: Save an enumerator file
      operationId: save_enumerator
      tags:
        - Enumerators
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/enumerations'
      responses:
        '200':
          description: Enumerator file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    delete:
      summary: Delete an enumerator file
      operationId: delete_enumerator
      tags:
        - Enumerators
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Enumerator file deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/test_data/:
    get:
      summary: List all Test Data Files
      operationId: list_data_files
      tags:
        - Test Data
      responses:
        '200':
          description: List of test data files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/files'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/test_data/{file_name}/:
    get:
      summary: Get a test data file 
      description: |
        Returns the contents of a test data file as a JSON array.
        MongoDB Extended JSON (e.g., `$oid`, `$date`) is supported for values.
      operationId: get_data_file
      tags:
        - Test Data
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test Data File (always a JSON array)
          content:
            application/json:
              schema:
                type: array
                items: {}
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    put:
      summary: Save a test data file
      description: |
        Saves the contents of a test data file as a JSON array.
        MongoDB Extended JSON (e.g., `$oid`, `$date`) is supported for values.
      operationId: save_data_file
      tags:
        - Test Data
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items: {}
      responses:
        '200':
          description: Test Data File saved
          content:
            application/json:
              schema:
                type: array
                items: {}
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    delete:
      summary: Delete a test data file
      operationId: delete_data_file
      tags:
        - Test Data
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Test Data File deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/migrations/:
    get:
      summary: List all Migration Files
      operationId: list_migrations
      tags:
        - Migrations
      responses:
        '200':
          description: List of migration files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/files'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/migrations/{file_name}/:
    get:
      summary: Get a migration file
      description: |
        Returns the contents of a migration file as JSON.
        Migration files contain MongoDB aggregation pipelines for data migration.
      operationId: get_migration
      tags:
        - Migrations
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Migration file content
          content:
            application/json:
              schema:
                type: array
                items: {}
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    put:
      summary: Save a migration file
      description: |
        Saves the contents of a migration file as JSON.
        Migration files contain MongoDB aggregation pipelines for data migration.
      operationId: save_migration
      tags:
        - Migrations
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items: {}
      responses:
        '200':
          description: Migration file saved
          content:
            application/json:
              schema:
                type: array
                items: {}
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
    delete:
      summary: Delete a migration file
      operationId: delete_migration
      tags:
        - Migrations
      parameters:
        - name: file_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Migration file deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/file'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/database/:
    delete:
      summary: Drop the Database
      description: LIVE endpoint that DROPS THE DATABASE!!! There are three safety checks, 
        BUILT_AT must be Local, ENABLE_DROP_DATABASE must be True, and the database must have no collections with 100 or more documents
      operationId: drop_database
      tags:
        - Database
      responses:
        '200':
          description: Database dropped
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'
        '500':
          description: Processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/event'

  /api/health:
    get:
      summary: Health check endpoint
      description: Returns Prometheus-formatted metrics for monitoring
      operationId: health_check
      tags:
        - Observability
      responses:
        '200':
          description: Prometheus metrics
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Processing error
  /api/config:
    get:
      summary: Get current configuration
      operationId: get_config
      tags:
        - Observability
      responses:
        '200':
          description: Current configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/config'
        '500':
          description: Processing error

components:
  schemas:
    files:
      type: array
      items:
        $ref: '#/components/schemas/file'
    file:
      type: object
      properties:
        file_name:
          type: string
          description: Name of the file
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        size:
          type: number
          description: Size in bytes
    enumerations:
      type: object
      properties:
        file_name:
          type: string
          description: Name of the enumeration file
        _locked:
          type: boolean
          description: Whether the enumeration file is locked from editing
        version:
          type: integer
          description: Version number of the enumeration
        enumerators:
          type: array
          description: Dictionary of enumerator names to their value mappings
          items:
            type: object
            properties:
              name:
                type: string
              values:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: string
                    description:
                      type: string
    configuration:
      description: SchemaManager Collection Configuration
      type: object
      required:
        - name
        - versions
      properties:
        name:
          description: The name of the MongoDB collection
          type: string
        description:
          description: A description of the MongoDB collection
          type: string
        versions:
          description: List of version configurations in chronological order
          type: array
          items:
            type: object
            description: Configuration for a specific version
            properties:
              version:
                description: Version string in format major.minor.patch.enumerator_version
                type: string
              drop_indexes:
                description: List of index names to drop in this version
                type: array
                items:
                  type: string
              migrations:
                description: List of migration/aggregation pipelines to run to migrate data from previous version to this version. 
                type: array
                items:
                  description: A migration file name
                  type: string
                  example: first_last_to_full.json
              add_indexes:
                description: List of indexes to add in this version. 
                type: array
                items:
                  description: Index items are defined at https://www.mongodb.com/docs/manual/indexes/
              test_data:
                description: Name of the test data file for this version
                type: string
                example: sample.1.0.0.1.json
              _locked:
                description: Whether this version is locked from modification
                type: boolean
                default: false 
    dictionary:
      description: A Dictionary with root property wrapper
      type: object
      properties:
        file_name:
          description: The name of the dictionary file
          type: string
        _locked:
          description: Whether the dictionary is locked from modification
          type: boolean
          default: false
        root:
          description: The root property containing the dictionary schema
          $ref: '#/components/schemas/dictionary_property'
      required:
        - file_name
        - _locked
        - root
    type:
      description: A Type with root property wrapper
      type: object
      properties:
        file_name:
          description: The name of the type file
          type: string
        _locked:
          description: Whether the type is locked from modification
          type: boolean
          default: false
        root:
          description: The root property containing the type schema
          $ref: '#/components/schemas/type_property'
      required:
        - file_name
        - _locked
        - root
    event:
      type: object
      required: [id, type, status]
      properties:
        id:
          type: string
          description: Unique identifier for the event
        type:
          type: string
          description: Type of the event
        status:
          type: string
          enum: [PENDING, SUCCESS, FAILURE]
          description: Current status of the event
        data:
          description: Event data or error information
          oneOf:
            - type: object
              additionalProperties: true
            - type: null
        starts:
          type: string
          format: date-time
          description: When the event started
        ends:
          type: string
          format: date-time
          description: When the event ended (null if still pending)
        sub_events:
          type: array
          description: List of sub-events
          items:
            $ref: '#/components/schemas/event'
    config:
      type: object
      properties:
        config_items:
          type: array
          items:
            type: object
            properties:
              name:
                description: Configuration item name
                type: string
              value:
                description: Configuration value (or "secret" for sensitive values)
                type: string
              from:
                description: Source of the configuration value
                type: string
                enum:
                  - default
                  - file
                  - environment
    property:
      description: A Property type
      oneOf:
        - $ref: '#/components/schemas/type_array'
        - $ref: '#/components/schemas/type_complex'
        - $ref: '#/components/schemas/type_constant'
        - $ref: '#/components/schemas/type_custom'
        - $ref: '#/components/schemas/type_enum_array'
        - $ref: '#/components/schemas/type_enum'
        - $ref: '#/components/schemas/type_object'
        - $ref: '#/components/schemas/type_one_of'
        - $ref: '#/components/schemas/type_ref'
        - $ref: '#/components/schemas/type_simple'
    type_property:
      description: A Type Property type
      oneOf:
        - $ref: '#/components/schemas/type_array'
        - $ref: '#/components/schemas/type_complex'
        - $ref: '#/components/schemas/type_custom'
        - $ref: '#/components/schemas/type_object'
        - $ref: '#/components/schemas/type_simple'
    dictionary_property:
      description: A Dictionary Property type
      oneOf:
        - $ref: '#/components/schemas/type_array'
        - $ref: '#/components/schemas/type_constant'
        - $ref: '#/components/schemas/type_custom'
        - $ref: '#/components/schemas/type_enum_array'
        - $ref: '#/components/schemas/type_enum'
        - $ref: '#/components/schemas/type_object'
        - $ref: '#/components/schemas/type_one_of'
        - $ref: '#/components/schemas/type_ref'
    type_array:
      description: An Array type
      type: object
      properties:
        name:
          description: The name of the Property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: Array Type Indicator
          type: string
          const: array
        required:
          description: Whether the property is required
          type: boolean
        items:
          description: The items of the array
          $ref: '#/components/schemas/property'
    type_complex:
        name:
          description: The name of the Property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: Complex Type Indicator
          type: string
          const: complex
        required:
          description: Whether the property is required
          type: boolean
        json_type:
          description: JSON schema definition for complex type
          type: object
          additionalProperties: true
        bson_type:
          description: BSON schema definition for complex type
          type: object
          additionalProperties: true
    type_constant:
        name:
          description: The name of the Property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: Constant Type Indicator
          type: string
          const: constant
        required:
          description: Whether the property is required
          type: boolean
        constant:
          description: Constant value for constant type
          type: string
    type_custom:
        name:
          description: The name of the Property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: Custom Type name
          type: string
        required:
          description: Whether the property is required
          type: boolean
    type_enum_array:
        name:
          description: The name of the Property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: Enum Array Type Indicator
          type: string
          const: enum_array
        required:
          description: Whether the property is required
          type: boolean
        enums:
          description: Enum name for enum or enum_array types
          type: string
    type_enum:
        name:
          description: The name of the Property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: Enum Type Indicator
          type: string
          const: enum
        required:
          description: Whether the property is required
          type: boolean
        enums:
          description: Enum name for enum or enum_array types
          type: string
    type_object:
        name:
          description: The name of the Property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: Object Type Indicator
          type: string
          const: object
        required:
          description: Whether the property is required
          type: boolean
        additional_properties:
          description: Whether the object type allows additional properties
          type: boolean
        properties:
          description: Properties of an Object type (array of property objects)
          type: array
          items:
            $ref: '#/components/schemas/property'
    type_one_of:
        name:
          description: The name of the Property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: OneOf Type Indicator
          type: string
          const: one_of
        required:
          description: Whether the property is required
          type: boolean
        properties:
          description: Properties of an OneOf type (array of property objects)
          type: array
          items:
            $ref: '#/components/schemas/property'
    type_ref:
        name:
          description: The name of the property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: Ref Type Indicator
          type: string
          const: ref
        required:
          description: Whether the property is required
          type: boolean
        ref:
          description: Reference to another type file
          type: string
    type_simple:
        name:
          description: The name of the Property
          type: string
        description:
          description: A description of the property
          type: string
        type:
          description: Simple Type Indicator
          type: string
          const: simple
        required:
          description: Whether the property is required
          type: boolean
        schema:
          description: Schema definition for simple type
          type: object
          additionalProperties: true
